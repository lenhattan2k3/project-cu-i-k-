const express = require("express");
const router = express.Router();
const multer = require("multer");
const Trip = require("../models/tripModel");

// ========================
// ‚öôÔ∏è C·∫•u h√¨nh Multer (upload ·∫£nh)
// ========================
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "uploads/"); // th∆∞ m·ª•c l∆∞u ·∫£nh
  },
  filename: (req, file, cb) => {
    cb(null, Date.now() + "_" + file.originalname);
  },
});

const upload = multer({ storage });

// ========================
// üü¢ 1Ô∏è‚É£ L·∫•y danh s√°ch chuy·∫øn xe
// ========================
router.get("/", async (req, res) => {
  try {
    const trips = await Trip.find();
    res.json(trips);
  } catch (error) {
    console.error("‚ùå Error getting trips:", error);
    res.status(500).json({ message: "L·ªói khi l·∫•y danh s√°ch chuy·∫øn xe" });
  }
});

// ========================
// üü¢ 2Ô∏è‚É£ Xem chi ti·∫øt 1 chuy·∫øn xe
// ========================
router.get("/:id", async (req, res) => {
  try {
    const trip = await Trip.findById(req.params.id);
    if (!trip) return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y chuy·∫øn xe" });
    res.json(trip);
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi l·∫•y chi ti·∫øt chuy·∫øn xe" });
  }
});

// ========================
// üü¢ 3Ô∏è‚É£ Th√™m chuy·∫øn xe m·ªõi (c√≥ upload ·∫£nh)
// ========================
router.post("/", upload.single("image"), async (req, res) => {
  try {
    const { tenChuyen, tu, den, ngayKhoiHanh, gioKhoiHanh, giaVe, soLuongGhe, nhaXe } = req.body;
    const imagePath = req.file ? req.file.path : null;

    const newTrip = new Trip({
      tenChuyen,
      tu,
      den,
      ngayKhoiHanh,
      gioKhoiHanh,
      giaVe,
      soLuongGhe,
      nhaXe,
      image: imagePath,
      trangThai: "Ho·∫°t ƒë·ªông",
    });

    await newTrip.save();
    res.status(201).json(newTrip);
  } catch (error) {
    console.error("‚ùå Error creating trip:", error);
    res.status(500).json({ message: "L·ªói khi t·∫°o chuy·∫øn xe" });
  }
});

// ========================
// üü¢ 4Ô∏è‚É£ C·∫≠p nh·∫≠t chuy·∫øn xe (cho ph√©p ƒë·ªïi ·∫£nh m·ªõi)
// ========================
router.put("/:id", upload.single("image"), async (req, res) => {
  try {
    const { tenChuyen, tu, den, ngayKhoiHanh, gioKhoiHanh, giaVe, soLuongGhe, nhaXe, trangThai } = req.body;

    const updateData = {
      tenChuyen,
      tu,
      den,
      ngayKhoiHanh,
      gioKhoiHanh,
      giaVe,
      soLuongGhe,
      nhaXe,
      trangThai,
    };

    // N·∫øu c√≥ ·∫£nh m·ªõi th√¨ c·∫≠p nh·∫≠t ƒë∆∞·ªùng d·∫´n ·∫£nh
    if (req.file) updateData.image = req.file.path;

    const updatedTrip = await Trip.findByIdAndUpdate(req.params.id, updateData, {
      new: true,
    });

    if (!updatedTrip)
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y chuy·∫øn xe" });

    res.json(updatedTrip);
  } catch (error) {
    console.error("‚ùå Error updating trip:", error);
    res.status(500).json({ message: "L·ªói khi c·∫≠p nh·∫≠t chuy·∫øn xe" });
  }
});

// ========================
// üü¢ 5Ô∏è‚É£ X√≥a chuy·∫øn xe
// ========================
router.delete("/:id", async (req, res) => {
  try {
    const deletedTrip = await Trip.findByIdAndDelete(req.params.id);
    if (!deletedTrip)
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y chuy·∫øn xe" });
    res.json({ message: "ƒê√£ x√≥a chuy·∫øn xe th√†nh c√¥ng" });
  } catch (error) {
    console.error("‚ùå Error deleting trip:", error);
    res.status(500).json({ message: "L·ªói khi x√≥a chuy·∫øn xe" });
  }
});

module.exports = router;
