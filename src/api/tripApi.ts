// üìÅ src/api/tripApi.ts
import axios from "axios";

const API_URL = "http://localhost:5000/api/trips"; // ‚úÖ ƒë√∫ng port backend

// üîπ L·∫•y t·∫•t c·∫£ chuy·∫øn
export const getAllTrips = async () => {
  const res = await axios.get(API_URL);
  return res.data;
};

// üîç L·∫•y chuy·∫øn theo id
export const getTripById = async (id: string) => {
  return axios.get(`${API_URL}/${id}`);
};
// üîπ T·∫°o chuy·∫øn m·ªõi
export const createTrip = async (tripData: any, isFormData = false) => {
  const headers = isFormData ? { "Content-Type": "multipart/form-data" } : {};
  const res = await axios.post(API_URL, tripData, { headers });
  return res.data;
};

// üîπ C·∫≠p nh·∫≠t chuy·∫øn
export const updateTrip = async (
  id: string,
  tripData: any,
  isFormData = false
) => {
  const headers = isFormData ? { "Content-Type": "multipart/form-data" } : {};
  const res = await axios.put(`${API_URL}/${id}`, tripData, { headers });
  return res.data;
};

// üîπ X√≥a chuy·∫øn
export const deleteTrip = async (id: string) => {
  const res = await axios.delete(`${API_URL}/${id}`);
  return res.data;
};

// üîπ T√¨m chuy·∫øn theo ƒëi·ªÉm ƒëi, ƒëi·ªÉm ƒë·∫øn, ng√†y
export const searchTrips = async (from: string, to: string, date: string) => {
  try {
    const res = await axios.get(API_URL, {
      params: { from, to, date },
    });
    return res.data;
  } catch (error: any) {
    console.error("‚ùå L·ªói khi t√¨m chuy·∫øn:", error.response?.data || error.message);
    throw error;
  }
};
